# Lcom/afwsamples/testdpc/policy/resetpassword/ResetPasswordService;->getActiveResetPasswordToken()[B [access_flags=private]
#
# Parameters:
# local registers: v0...v4
#
# - return:byte[]

getActiveResetPasswordToken-BB@0x0 : [ getActiveResetPasswordToken-BB@0xe getActiveResetPasswordToken-BB@0x12 ]
	0       (00000000) const/4              v1, 0
	1       (00000002) invoke-static        v4, Lcom/afwsamples/testdpc/policy/resetpassword/ResetPasswordWithTokenFragment;->loadPasswordResetTokenFromPreference(Landroid/content/Context;)[B
	2       (00000008) move-result-object   v0
	3       (0000000a) if-nez               v0, +4

getActiveResetPasswordToken-BB@0xe : [ getActiveResetPasswordToken-BB@0x10 ]
	4       (0000000e) move-object          v0, v1

getActiveResetPasswordToken-BB@0x10 : 
	5       (00000010) return-object        v0

getActiveResetPasswordToken-BB@0x12 : [ getActiveResetPasswordToken-BB@0x2a getActiveResetPasswordToken-BB@0x10 ]
	6       (00000012) iget-object          v2, v4, Lcom/afwsamples/testdpc/policy/resetpassword/ResetPasswordService;->mDpm Landroid/app/admin/DevicePolicyManager;
	7       (00000016) invoke-static        v4, Lcom/afwsamples/testdpc/DeviceAdminReceiver;->getComponentName(Landroid/content/Context;)Landroid/content/ComponentName;
	8       (0000001c) move-result-object   v3
	9       (0000001e) invoke-virtual       v2, v3, Landroid/app/admin/DevicePolicyManager;->isResetPasswordTokenActive(Landroid/content/ComponentName;)Z
	10      (00000024) move-result          v2
	11      (00000026) if-nez               v2, -b

getActiveResetPasswordToken-BB@0x2a : [ getActiveResetPasswordToken-BB@0x10 ]
	12      (0000002a) const-string         v2, 'ResetPasswordService'
	13      (0000002e) const-string         v3, 'Token exists but is not activated.'
	14      (00000032) invoke-static        v2, v3, Landroid/util/Log;->i(Ljava/lang/String; Ljava/lang/String;)I
	15      (00000038) move-object          v0, v1
	16      (0000003a) goto                 -15

